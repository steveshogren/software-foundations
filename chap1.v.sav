Inductive day : Type :=
  | monday : day
  | tuesday : day
  | wednesday : day
  | thursday : day
  | friday : day
  | saturday : day
  | sunday : day.

Definition next_weekday (d:day) : day :=
  match d with
  | monday => tuesday
  | tuesday => wednesday
  | wednesday => thursday
  | thursday => friday
  | friday => monday
  | saturday => monday
  | sunday => monday
  end.

(* Execute code directly with Compute *)
Compute (next_weekday friday).
Compute (next_weekday (next_weekday saturday)).


(* Proof by example of next_weekday? *)
Example test_next_weekday:
  (next_weekday (next_weekday saturday)) = tuesday.
Proof. simpl. reflexivity. Qed.

(* Boolean type and helpers *)

Inductive bool : Type :=
  | true : bool
  | false : bool.

Definition negb (b:bool) : bool :=
  match b with
  | true => false
  | false => true
  end.

Definition andb (b1:bool) (b2:bool) : bool :=
  match b1 with
  | true => b2
  | false => false
  end.

Definition orb (b1:bool) (b2:bool) : bool :=
  match b1 with
  | true => true
  | false => b2
  end.

Compute (orb true false).

Example test_orb1: (orb true false) = true.
Proof. simpl. reflexivity. Qed.
Example test_orb2: (orb false false) = false.
Proof. simpl. reflexivity. Qed.
Example test_orb3: (orb false true) = true.
Proof. simpl. reflexivity. Qed.
Example test_orb4: (orb true true) = true.
Proof. simpl. reflexivity. Qed.

(* Infix operators *)

Infix "&&" := andb.
Infix "||" := orb.

Example test_orb5: false || false || true = true.
Proof. simpl. reflexivity. Qed.

KCpISURFKikKRGVmaW5pdGlvbiBuYW5kYiAoYjE6Ym9vbCkgKGIyOmJvb2wpIDogYm9vbCA6PQog
IG1hdGNoIGIxIHdpdGgKICB8IHRydWUgPT4gbmVnYiBiMgogIHwgZmFsc2UgPT4gdHJ1ZQogIGVu
ZC4KCkV4YW1wbGUgdGVzdF9uYW5kYjE6IChuYW5kYiB0cnVlIGZhbHNlKSA9IHRydWUuClByb29m
LiBzaW1wbC4gcmVmbGV4aXZpdHkuIFFlZC4KRXhhbXBsZSB0ZXN0X25hbmRiMjogKG5hbmRiIGZh
bHNlIGZhbHNlKSA9IHRydWUuClByb29mLiBzaW1wbC4gcmVmbGV4aXZpdHkuIFFlZC4KRXhhbXBs
ZSB0ZXN0X25hbmRiMzogKG5hbmRiIGZhbHNlIHRydWUpID0gdHJ1ZS4KUHJvb2YuIHNpbXBsLiBy
ZWZsZXhpdml0eS4gUWVkLgpFeGFtcGxlIHRlc3RfbmFuZGI0OiAobmFuZGIgdHJ1ZSB0cnVlKSA9
IGZhbHNlLgpQcm9vZi4gc2ltcGwuIHJlZmxleGl2aXR5LiBRZWQuCgoKRGVmaW5pdGlvbiBhbmRi
MyAoYjE6Ym9vbCkgKGIyOmJvb2wpIChiMzpib29sKSA6IGJvb2wgOj0KIGIxICYmIGIyICYmIGIz
LgoKRXhhbXBsZSB0ZXN0X2FuZGIzMTogKGFuZGIzIHRydWUgdHJ1ZSB0cnVlKSA9IHRydWUuClBy
b29mLiBzaW1wbC4gcmVmbGV4aXZpdHkuIFFlZC4KRXhhbXBsZSB0ZXN0X2FuZGIzMjogKGFuZGIz
IGZhbHNlIHRydWUgdHJ1ZSkgPSBmYWxzZS4KUHJvb2YuIHNpbXBsLiByZWZsZXhpdml0eS4gUWVk
LgpFeGFtcGxlIHRlc3RfYW5kYjMzOiAoYW5kYjMgdHJ1ZSBmYWxzZSB0cnVlKSA9IGZhbHNlLgpQ
cm9vZi4gc2ltcGwuIHJlZmxleGl2aXR5LiBRZWQuCkV4YW1wbGUgdGVzdF9hbmRiMzQ6IChhbmRi
MyB0cnVlIHRydWUgZmFsc2UpID0gZmFsc2UuClByb29mLiBzaW1wbC4gcmVmbGV4aXZpdHkuIFFl
ZC4KCigqVUhJREUqKQ==

